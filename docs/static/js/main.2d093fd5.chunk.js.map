{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","props","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAACC,GAC1B,IAAQC,EAAkBD,EAAlBC,cAER,EAAsCC,mBAAS,IAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KAgBA,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC7CN,EAAc,MAMhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAnBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCTdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAUH,GAD5C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAadM,GAbc,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAInC,OAFAc,QAAQC,IAAIL,EAAOV,GAGjB,sBAAKgB,UAAU,yCAAf,UACE,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,4BAAKA,QCLES,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAExB,ECH0B,SAACA,GAC3B,MAA4Bd,mBAAS,CACnCqB,KAAM,GACNe,SAAS,IAFX,mBAAQC,EAAR,KAAeC,EAAf,KAiBA,OAZAC,qBAAU,WAER1B,EAAQC,GACL0B,MAAK,SAAAC,GAAI,OACRH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAGd,CAACtB,IAGGuB,EDf2BK,CAAa5B,GAAjCa,EAAd,EAAQN,KAAce,EAAtB,EAAsBA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAoDlB,IAElDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEIL,EAAOJ,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAAiCA,GAAdA,EAAIC,aEZtCkB,EAAe,WAE1B,MAAsC3C,mBAAS,CAAE,gBAAjD,mBAAQQ,EAAR,KAAoBT,EAApB,KAEA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEIS,EAAWe,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAWA,GADLA,Y,MCXpB8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2d093fd5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = (props) => {\r\n  const { setCategories } = props;\r\n\r\n  const [ inputValue, setInputValue ] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if ( inputValue.trim().length > 2 ) {\r\n      setCategories(categories => [ inputValue, ...categories ]);\r\n      setInputValue('');\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input\r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=U7xUcnt0sij0Evg1lvUfPeOMRK1Tw05P`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n\r\n};","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n  console.log(title, url);\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={ url } alt={ title }/>\r\n      <p>{ title }</p>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map(img => <GifGridItem key={ img.id } { ...img } />)\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [ state, setState ] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    getGifs(category)\r\n      .then(imgs =>\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        }));\r\n\r\n  }, [category]);\r\n\r\n\r\n  return state;\r\n};","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [ categories, setCategories ] = useState([ 'Dragon Ball' ]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories }/>\r\n      <hr/>\r\n\r\n      <ol>\r\n        {\r\n          categories.map(category =>\r\n            <GifGrid\r\n              key={ category }\r\n              category={ category }\r\n            />\r\n          )\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}